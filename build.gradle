buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
repositories {
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
}

ext.configFile = file "gradle.properties"
ext.configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

if (System.env.TRAVIS_TAG != null && !System.env.TRAVIS_TAG.isEmpty()) {
    ext.config.version_compile = System.env.TRAVIS_TAG.substring(0, System.env.TRAVIS_TAG.length()-1)
    ext.config.build_type = System.env.TRAVIS_TAG.substring(System.env.TRAVIS_TAG.length()-1)
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "${version_minecraft}-${version_compile}${build_type}"
group= ""
archivesBaseName = "${compile_name}"
sourceCompatibility = targetCompatibility = '1.8'

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${version_long}"
    mappings = "${version_mappings}"
    useDepAts = false
    runDir = "run"
    
    replace "@VERSION", project.version_compile
    replaceIn "Constants.java"
}

dependencies {
    // Database engines
    compile "org.xerial:sqlite-jdbc:3.8.5-pre1"
    compile "mysql:mysql-connector-java:5.1.32"

    // Other deps
    compile "org.beanshell:bsh:2.0b5"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version'           : project.version,
               'mcversion'         : project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
}

jar {
    classifier = ''
    manifest {
        attributes (
           'FMLCorePlugin': 'Constitution.DependencyLoader',
            'FMLCorePluginContainsFMLMod': 'true'
        )
    }
}

}
